# Generated by Django 5.2 on 2025-04-08 03:09

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("business", "0001_initial"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ExceptionCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("name", models.CharField(max_length=100)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HookTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("name", models.CharField(max_length=100)),
                (
                    "type",
                    models.CharField(
                        choices=[("SETUP", "前置"), ("TEARDOWN", "后置")], max_length=10
                    ),
                ),
                ("script", models.TextField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TestApi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("name", models.CharField(max_length=200, verbose_name="接口名称")),
                ("description", models.TextField(blank=True, verbose_name="接口描述")),
                (
                    "protocol",
                    models.CharField(
                        choices=[
                            ("HTTP", "HTTP"),
                            ("GraphQL", "GraphQL"),
                            ("gRPC", "gRPC"),
                            ("DUBBO", "Dubbo"),
                        ],
                        default="HTTP",
                        max_length=20,
                        verbose_name="协议类型",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("GET", "GET"),
                            ("POST", "POST"),
                            ("PUT", "PUT"),
                            ("DELETE", "DELETE"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="请求方法",
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="请求 URL"
                    ),
                ),
                (
                    "headers",
                    models.JSONField(blank=True, default=dict, verbose_name="请求头"),
                ),
                (
                    "body",
                    models.JSONField(blank=True, default=dict, verbose_name="请求体"),
                ),
                (
                    "query_params",
                    models.JSONField(blank=True, default=dict, verbose_name="查询参数"),
                ),
                (
                    "graphql_query",
                    models.TextField(
                        blank=True, null=True, verbose_name="GraphQL 查询字符串"
                    ),
                ),
                (
                    "dubbo_method",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Dubbo 方法名"
                    ),
                ),
                (
                    "dubbo_params",
                    models.JSONField(blank=True, null=True, verbose_name="Dubbo 参数"),
                ),
                (
                    "grpc_service",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="gRPC 服务名"
                    ),
                ),
                (
                    "grpc_method",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="gRPC 方法名"
                    ),
                ),
                (
                    "grpc_payload",
                    models.JSONField(blank=True, null=True, verbose_name="gRPC 请求负载"),
                ),
                (
                    "timeout",
                    models.PositiveIntegerField(default=30, verbose_name="超时时间（秒）"),
                ),
                (
                    "response_example",
                    models.JSONField(blank=True, default=dict, verbose_name="响应示例"),
                ),
                (
                    "is_mock",
                    models.BooleanField(default=False, verbose_name="是否启用 Mock"),
                ),
                (
                    "mock_response",
                    models.JSONField(blank=True, default=dict, verbose_name="Mock 响应"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "API 单接口",
                "verbose_name_plural": "API 单接口",
                "db_table": "engine_api",
            },
        ),
        migrations.CreateModel(
            name="TestCase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("name", models.CharField(max_length=200, verbose_name="测试用例名称")),
                (
                    "protocol",
                    models.CharField(
                        choices=[
                            ("HTTP", "HTTP"),
                            ("GraphQL", "GraphQL"),
                            ("gRPC", "gRPC"),
                            ("DUBBO", "Dubbo"),
                        ],
                        default="HTTP",
                        max_length=20,
                        verbose_name="协议类型",
                    ),
                ),
                ("request_config", models.JSONField(help_text="请求配置")),
                ("variables", models.JSONField(verbose_name="变量")),
                ("extractors", models.JSONField(default=list, verbose_name="提取器")),
                ("validators", models.JSONField(default=list, verbose_name="校验器")),
                ("setup_hooks", models.JSONField(default=list, verbose_name="前置 Hook")),
                (
                    "teardown_hooks",
                    models.JSONField(default=list, verbose_name="后置 Hook"),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="排序")),
                (
                    "retries",
                    models.PositiveIntegerField(default=0, verbose_name="重试次数"),
                ),
                (
                    "version",
                    models.CharField(default="v1.0", max_length=50, verbose_name="版本号"),
                ),
                (
                    "api",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="testcases",
                        to="engine.testapi",
                        verbose_name="关联的单接口",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TestCaseParam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("param_data", models.JSONField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "testcase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="params",
                        to="engine.testcase",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TestJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("name", models.CharField(max_length=200)),
                ("parallel", models.BooleanField(default=False)),
                (
                    "run_type",
                    models.CharField(
                        choices=[("FULL", "全量"), ("PARTIAL", "部分")],
                        default="FULL",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "待执行"),
                            ("RUNNING", "执行中"),
                            ("SUCCESS", "成功"),
                            ("FAILED", "失败"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("finished_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "environment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.environment",
                    ),
                ),
                ("testcases", models.ManyToManyField(blank=True, to="engine.testcase")),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SchedulePlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("name", models.CharField(max_length=100)),
                ("cron", models.CharField(help_text="crontab 表达式", max_length=100)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="engine.testjob"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ExceptionRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("detail", models.TextField()),
                ("source", models.CharField(max_length=100)),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="engine.exceptioncategory",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="engine.testjob"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CeleryTaskRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("task_id", models.CharField(max_length=100)),
                ("status", models.CharField(default="PENDING", max_length=50)),
                ("result", models.JSONField(blank=True, default=dict)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("finished_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="engine.testjob"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TestReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("summary", models.JSONField()),
                ("logs", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "job",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report",
                        to="engine.testjob",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CaseReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("status", models.CharField(max_length=20)),
                ("duration", models.FloatField()),
                ("extract_result", models.JSONField()),
                ("validator_result", models.JSONField(default=list)),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "testcase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="engine.testcase",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="case_reports",
                        to="engine.testreport",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TestStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("name", models.CharField(max_length=200)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("HTTP", "HTTP"),
                            ("UI", "UI"),
                            ("GraphQL", "GraphQL"),
                        ],
                        max_length=20,
                    ),
                ),
                ("request_config", models.JSONField(help_text="请求/操作配置")),
                ("extractors", models.JSONField(default=list)),
                ("validators", models.JSONField(default=list)),
                ("setup_hooks", models.JSONField(default=list)),
                ("teardown_hooks", models.JSONField(default=list)),
                ("retries", models.PositiveIntegerField(default=0)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "testcase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="engine.testcase",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StepReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("status", models.CharField(max_length=20)),
                ("duration", models.FloatField()),
                ("extract_result", models.JSONField()),
                ("validator_result", models.JSONField(default=list)),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "case_report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="step_reports",
                        to="engine.casereport",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="engine.teststep",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TestSuite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("name", models.CharField(max_length=200)),
                ("is_public", models.BooleanField(default=False, help_text="是否公开可见")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="父级测试套件",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="engine.testsuite",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="testjob",
            name="suite",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="engine.testsuite",
            ),
        ),
        migrations.AddField(
            model_name="testcase",
            name="suite",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="testcases",
                to="engine.testsuite",
                verbose_name="所属测试套件",
            ),
        ),
        migrations.CreateModel(
            name="CustomAssertion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, help_text="创建时间"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="最后更新时间")),
                ("is_active", models.BooleanField(default=True, help_text="是否启用")),
                ("description", models.TextField(blank=True, help_text="描述")),
                ("name", models.CharField(max_length=100, unique=True)),
                ("script", models.TextField(help_text="Python 表达式或脚本")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="创建人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="更新人",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "indexes": [
                    models.Index(
                        fields=["-created_at"], name="engine_cust_created_8933a1_idx"
                    ),
                    models.Index(
                        fields=["-updated_at"], name="engine_cust_updated_6b77ec_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="exceptioncategory",
            index=models.Index(
                fields=["-created_at"], name="engine_exce_created_3b1d0e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="exceptioncategory",
            index=models.Index(
                fields=["-updated_at"], name="engine_exce_updated_401f2a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hooktemplate",
            index=models.Index(
                fields=["-created_at"], name="engine_hook_created_927cf9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hooktemplate",
            index=models.Index(
                fields=["-updated_at"], name="engine_hook_updated_252e03_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testcaseparam",
            index=models.Index(
                fields=["-created_at"], name="engine_test_created_676532_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testcaseparam",
            index=models.Index(
                fields=["-updated_at"], name="engine_test_updated_55dcff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="scheduleplan",
            index=models.Index(
                fields=["-created_at"], name="engine_sche_created_5c0069_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="scheduleplan",
            index=models.Index(
                fields=["-updated_at"], name="engine_sche_updated_7e8acf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="exceptionrecord",
            index=models.Index(
                fields=["-created_at"], name="engine_exce_created_9c1832_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="exceptionrecord",
            index=models.Index(
                fields=["-updated_at"], name="engine_exce_updated_bcdf07_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="celerytaskrecord",
            index=models.Index(
                fields=["-created_at"], name="engine_cele_created_4b4ef2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="celerytaskrecord",
            index=models.Index(
                fields=["-updated_at"], name="engine_cele_updated_97d218_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testreport",
            index=models.Index(
                fields=["-created_at"], name="engine_test_created_164a49_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testreport",
            index=models.Index(
                fields=["-updated_at"], name="engine_test_updated_760200_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="casereport",
            index=models.Index(
                fields=["-created_at"], name="engine_case_created_afee6c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="casereport",
            index=models.Index(
                fields=["-updated_at"], name="engine_case_updated_08e083_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teststep",
            index=models.Index(
                fields=["-created_at"], name="engine_test_created_a566a1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="teststep",
            index=models.Index(
                fields=["-updated_at"], name="engine_test_updated_6206ff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stepreport",
            index=models.Index(
                fields=["-created_at"], name="engine_step_created_74cbfe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stepreport",
            index=models.Index(
                fields=["-updated_at"], name="engine_step_updated_740252_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testsuite",
            index=models.Index(
                fields=["-created_at"], name="engine_test_created_4978c0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testsuite",
            index=models.Index(
                fields=["-updated_at"], name="engine_test_updated_cfde6d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testjob",
            index=models.Index(
                fields=["-created_at"], name="engine_test_created_5e275b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testjob",
            index=models.Index(
                fields=["-updated_at"], name="engine_test_updated_ae79c8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testcase",
            index=models.Index(
                fields=["-created_at"], name="engine_test_created_5ae706_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="testcase",
            index=models.Index(
                fields=["-updated_at"], name="engine_test_updated_a20f50_idx"
            ),
        ),
    ]
